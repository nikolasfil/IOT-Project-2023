Search.setIndex({"docnames": ["broker", "button_sensor", "connector_server", "context_provider", "index", "modules", "publisher_broker", "sensor_context_provider", "servers", "subscriber_broker", "tracker_sensor", "virtual_sensor"], "filenames": ["broker.rst", "button_sensor.rst", "connector_server.rst", "context_provider.rst", "index.rst", "modules.rst", "publisher_broker.rst", "sensor_context_provider.rst", "servers.rst", "subscriber_broker.rst", "tracker_sensor.rst", "virtual_sensor.rst"], "titles": ["broker module", "button_sensor module", "connector_server module", "context_provider module", "Welcome to IOT\u2019s documentation!", "src", "publisher_broker module", "sensor_context_provider module", "servers package", "subscriber_broker module", "tracker_sensor module", "virtual_sensor module"], "terms": {"class": [0, 1, 2, 3, 6, 7, 9, 10, 11], "client_id": [0, 6], "str": [0, 2, 3, 7, 11], "none": [0, 1, 2, 3, 6, 7, 10, 11], "topic": [0, 6], "port": [0, 6], "int": 0, "run_only_onc": [0, 6], "bool": [0, 3], "fals": [0, 3, 6], "debug": 0, "sourc": [0, 1, 2, 3, 6, 7, 9, 10, 11], "base": [0, 1, 3, 6, 7, 9, 10, 11], "object": [0, 3, 7, 10, 11], "connect_mqtt": [0, 4, 5], "dict_to_json": [0, 4, 5], "payload": [0, 3], "convert": [0, 11], "dict": [0, 1, 3, 7, 10, 11], "json": [0, 2, 3, 10, 11], "string": 0, "exit": [0, 4, 5], "generate_unique_hash": [0, 4, 5, 11], "json_to_dict": [0, 4, 5], "log": [0, 4, 5], "messag": 0, "file": 0, "main": [0, 4, 5, 6, 9], "on_connect": [0, 4, 5], "client": [0, 9], "userdata": [0, 9], "flag": 0, "rc": 0, "on_messag": [0, 4, 5, 9], "msg": [0, 9], "on_publish": [0, 4, 5], "mid": 0, "path_to_fil": [0, 4, 5], "filenam": 0, "return": [0, 1, 2, 3, 7, 10, 11], "path": 0, "publish": [0, 4, 5, 6], "run_loop": [0, 4, 5], "run_onc": [0, 4, 5], "subscrib": [0, 4, 5, 9], "button": [1, 2, 4, 5], "kwarg": [1, 3, 7, 9, 10, 11], "sensor": [1, 2, 4, 5, 10, 11], "default_valu": [1, 4, 5, 10, 11], "initi": [1, 4, 5, 10, 11], "mqtt_to_cp": [1, 4, 5, 10, 11], "arg": [1, 11], "descript": [1, 2, 3, 7, 10, 11], "transform": [1, 10, 11], "inform": [1, 2, 10, 11], "format": [1, 2, 10, 11], "context": [1, 2, 10, 11], "provid": [1, 2, 10, 11], "can": [1, 10, 11], "understand": [1, 10, 11], "rais": [1, 10, 11], "valueerror": [1, 10, 11], "_description_": [1, 11], "type": [1, 2, 3, 7, 10, 11], "_type_": [1, 11], "buttoncpf": [1, 4, 5], "sensorcpf": [1, 4, 5, 10, 11], "default": [1, 10, 11], "valu": [1, 10, 11], "keep": [1, 11], "an": [1, 11], "interfac": [1, 11], "new_ent": [1, 4, 5, 7, 10, 11], "entity_data": [1, 7, 10, 11], "creat": [1, 7, 10, 11], "new": [1, 7, 10, 11], "entiti": [1, 7, 10, 11], "given": [1, 3, 7, 10, 11], "data": [1, 2, 7, 10, 11], "ad": [1, 11], "well": [1, 11], "paramet": [1, 2, 3, 7, 10, 11], "option": [1, 10, 11], "about": [1, 10, 11], "devic": [1, 2, 10, 11], "i": [1, 2, 3, 10, 11], "when": [1, 11], "instanc": [1, 11], "method": [1, 3, 11], "call": [1, 11], "complet": [1, 11], "form": [1, 11], "dictionari": [1, 7, 11], "device_info": [2, 4, 5], "get": [2, 3, 7, 11], "info": [2, 10], "from": [2, 3, 7, 10, 11], "mqtt": [2, 10], "server": [2, 4, 5, 10], "get_devic": [2, 4, 5], "broker": [2, 4, 5, 6, 9], "The": [2, 3, 7, 10, 11], "handling_devic": [2, 4, 5, 9], "handl": 2, "chang": 2, "It": 2, "take": 2, "like": 2, "differenti": 2, "between": 2, "tracker": [2, 4, 5, 10], "contain": [2, 10], "sent": [2, 10], "recogn": 2, "home": [2, 4, 5], "page": [2, 4], "A": 2, "simpl": 2, "request": [2, 3, 7], "check": [2, 3], "run": 2, "html": 2, "render": 2, "contextprovid": [3, 4, 5, 7], "build_request": [3, 4, 5], "build": 3, "url": 3, "header": 3, "send": 3, "us": [3, 11], "respons": [3, 7], "get_json_respons": [3, 4, 5], "is_json": [3, 4, 5], "python": [3, 7], "true": 3, "make_request": [3, 4, 5], "make": 3, "set_head": [3, 4, 5], "set": [3, 10], "index": 4, "search": 4, "button_sensor": [4, 5], "connector_serv": [4, 5], "context_provid": [4, 5], "publisher_brok": [4, 5], "sensor_context_provid": [4, 5], "sensorcp": [4, 5, 7], "create_ent": [4, 5, 7], "delete_ent": [4, 5, 7], "get_attribut": [4, 5, 7], "get_ent": [4, 5, 7], "update_ent": [4, 5, 7], "packag": [4, 5], "submodul": [4, 5], "flask_server_exampl": [4, 5], "content": [4, 5], "subscriber_brok": [4, 5], "tracker_sensor": [4, 5], "trackercpf": [4, 5, 10], "virtual_sensor": [4, 5], "get_datetim": [4, 5, 11], "info_to_json": [4, 5, 11], "get_dat": [4, 5, 11], "get_tim": [4, 5, 11], "modul": 5, "assign": 7, "result": 7, "self": 7, "entity_id": 7, "delet": 7, "id": [7, 10], "attribut": [7, 10], "either": 7, "list": 7, "updat": [7, 10], "gener": [10, 11], "ar": 10, "deviceinfo": 10, "rxinfo": 10, "rx": 10, "txinfo": 10, "tx": 10, "have": 10, "been": 10, "exampl": 10, "tracker4": 10, "asset": 10, "track": 10, "locat": 10, "metadata": 10, "null": 10, "temperatur": 10, "float": 10, "25": 10, "5": 10, "timestamp": [10, 11], "date": [10, 11], "2021": 10, "08": 10, "time": [10, 11], "12": 10, "00": 10, "all": 10, "need": 10, "No": 10, "uniqu": 11, "hash": 11, "current": 11, "datetim": 11, "isoformat": 11}, "objects": {"": [[0, 0, 0, "-", "broker"], [1, 0, 0, "-", "button_sensor"], [2, 0, 0, "-", "connector_server"], [3, 0, 0, "-", "context_provider"], [6, 0, 0, "-", "publisher_broker"], [7, 0, 0, "-", "sensor_context_provider"], [9, 0, 0, "-", "subscriber_broker"], [10, 0, 0, "-", "tracker_sensor"], [11, 0, 0, "-", "virtual_sensor"]], "broker": [[0, 1, 1, "", "Broker"]], "broker.Broker": [[0, 2, 1, "", "connect_mqtt"], [0, 2, 1, "", "dict_to_json"], [0, 2, 1, "", "exit"], [0, 2, 1, "", "generate_unique_hash"], [0, 2, 1, "", "json_to_dict"], [0, 2, 1, "", "logging"], [0, 2, 1, "", "main"], [0, 2, 1, "", "on_connect"], [0, 2, 1, "", "on_message"], [0, 2, 1, "", "on_publish"], [0, 2, 1, "", "path_to_file"], [0, 2, 1, "", "publish"], [0, 2, 1, "", "run_loop"], [0, 2, 1, "", "run_once"], [0, 2, 1, "", "subscribe"]], "button_sensor": [[1, 1, 1, "", "Button"], [1, 1, 1, "", "ButtonCPF"]], "button_sensor.Button": [[1, 2, 1, "", "default_values"], [1, 2, 1, "", "initialize"], [1, 2, 1, "", "mqtt_to_cp"]], "button_sensor.ButtonCPF": [[1, 2, 1, "", "default_values"], [1, 2, 1, "", "new_entity"]], "connector_server": [[2, 3, 1, "", "device_info"], [2, 3, 1, "", "get_device"], [2, 3, 1, "", "handling_device"], [2, 3, 1, "", "home"]], "context_provider": [[3, 1, 1, "", "ContextProvider"]], "context_provider.ContextProvider": [[3, 2, 1, "", "build_request"], [3, 2, 1, "", "get_json_response"], [3, 2, 1, "", "is_json"], [3, 2, 1, "", "make_request"], [3, 2, 1, "", "set_headers"]], "publisher_broker": [[6, 1, 1, "", "Publisher"]], "publisher_broker.Publisher": [[6, 2, 1, "", "main"]], "sensor_context_provider": [[7, 1, 1, "", "SensorCP"]], "sensor_context_provider.SensorCP": [[7, 2, 1, "", "create_entity"], [7, 2, 1, "", "delete_entity"], [7, 2, 1, "", "get_attribute"], [7, 2, 1, "", "get_entity"], [7, 2, 1, "", "new_entity"], [7, 2, 1, "", "update_entity"]], "subscriber_broker": [[9, 1, 1, "", "Subscriber"]], "subscriber_broker.Subscriber": [[9, 2, 1, "", "handling_device"], [9, 2, 1, "", "main"], [9, 2, 1, "", "on_message"]], "tracker_sensor": [[10, 1, 1, "", "Tracker"], [10, 1, 1, "", "TrackerCPF"]], "tracker_sensor.Tracker": [[10, 2, 1, "", "default_values"], [10, 2, 1, "", "initialize"], [10, 2, 1, "", "mqtt_to_cp"]], "tracker_sensor.TrackerCPF": [[10, 2, 1, "", "default_values"], [10, 2, 1, "", "new_entity"]], "virtual_sensor": [[11, 1, 1, "", "Sensor"], [11, 1, 1, "", "SensorCPF"]], "virtual_sensor.Sensor": [[11, 2, 1, "", "generate_unique_hash"], [11, 2, 1, "", "get_datetime"], [11, 2, 1, "", "info_to_json"], [11, 2, 1, "", "mqtt_to_cp"]], "virtual_sensor.SensorCPF": [[11, 2, 1, "", "default_values"], [11, 2, 1, "", "get_date"], [11, 2, 1, "", "get_time"], [11, 2, 1, "", "new_entity"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"broker": 0, "modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11], "button_sensor": 1, "connector_serv": 2, "context_provid": 3, "welcom": 4, "iot": 4, "": 4, "document": 4, "indic": 4, "tabl": 4, "src": [4, 5], "publisher_brok": 6, "sensor_context_provid": 7, "server": 8, "packag": 8, "submodul": 8, "flask_server_exampl": 8, "content": 8, "subscriber_brok": 9, "tracker_sensor": 10, "virtual_sensor": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"broker module": [[0, "module-broker"]], "button_sensor module": [[1, "module-button_sensor"]], "connector_server module": [[2, "module-connector_server"]], "context_provider module": [[3, "module-context_provider"]], "Welcome to IOT\u2019s documentation!": [[4, "welcome-to-iot-s-documentation"]], "Indices and tables": [[4, "indices-and-tables"]], "Modules": [[4, "modules"]], "src": [[4, "src"], [5, "src"]], "publisher_broker module": [[6, "module-publisher_broker"]], "sensor_context_provider module": [[7, "module-sensor_context_provider"]], "servers package": [[8, "servers-package"]], "Submodules": [[8, "submodules"]], "servers.flask_server_example module": [[8, "servers-flask-server-example-module"]], "Module contents": [[8, "module-contents"]], "subscriber_broker module": [[9, "module-subscriber_broker"]], "tracker_sensor module": [[10, "module-tracker_sensor"]], "virtual_sensor module": [[11, "module-virtual_sensor"]]}, "indexentries": {"broker (class in broker)": [[0, "broker.Broker"]], "broker": [[0, "module-broker"]], "connect_mqtt() (broker.broker method)": [[0, "broker.Broker.connect_mqtt"]], "dict_to_json() (broker.broker method)": [[0, "broker.Broker.dict_to_json"]], "exit() (broker.broker method)": [[0, "broker.Broker.exit"]], "generate_unique_hash() (broker.broker method)": [[0, "broker.Broker.generate_unique_hash"]], "json_to_dict() (broker.broker method)": [[0, "broker.Broker.json_to_dict"]], "logging() (broker.broker method)": [[0, "broker.Broker.logging"]], "main() (broker.broker method)": [[0, "broker.Broker.main"]], "module": [[0, "module-broker"], [1, "module-button_sensor"], [2, "module-connector_server"], [3, "module-context_provider"], [6, "module-publisher_broker"], [7, "module-sensor_context_provider"], [9, "module-subscriber_broker"], [10, "module-tracker_sensor"], [11, "module-virtual_sensor"]], "on_connect() (broker.broker method)": [[0, "broker.Broker.on_connect"]], "on_message() (broker.broker method)": [[0, "broker.Broker.on_message"]], "on_publish() (broker.broker method)": [[0, "broker.Broker.on_publish"]], "path_to_file() (broker.broker method)": [[0, "broker.Broker.path_to_file"]], "publish() (broker.broker method)": [[0, "broker.Broker.publish"]], "run_loop() (broker.broker method)": [[0, "broker.Broker.run_loop"]], "run_once() (broker.broker method)": [[0, "broker.Broker.run_once"]], "subscribe() (broker.broker method)": [[0, "broker.Broker.subscribe"]], "button (class in button_sensor)": [[1, "button_sensor.Button"]], "buttoncpf (class in button_sensor)": [[1, "button_sensor.ButtonCPF"]], "button_sensor": [[1, "module-button_sensor"]], "default_values() (button_sensor.button method)": [[1, "button_sensor.Button.default_values"]], "default_values() (button_sensor.buttoncpf method)": [[1, "button_sensor.ButtonCPF.default_values"]], "initialize() (button_sensor.button method)": [[1, "button_sensor.Button.initialize"]], "mqtt_to_cp() (button_sensor.button method)": [[1, "button_sensor.Button.mqtt_to_cp"]], "new_entity() (button_sensor.buttoncpf method)": [[1, "button_sensor.ButtonCPF.new_entity"]], "connector_server": [[2, "module-connector_server"]], "device_info() (in module connector_server)": [[2, "connector_server.device_info"]], "get_device() (in module connector_server)": [[2, "connector_server.get_device"]], "handling_device() (in module connector_server)": [[2, "connector_server.handling_device"]], "home() (in module connector_server)": [[2, "connector_server.home"]], "contextprovider (class in context_provider)": [[3, "context_provider.ContextProvider"]], "build_request() (context_provider.contextprovider method)": [[3, "context_provider.ContextProvider.build_request"]], "context_provider": [[3, "module-context_provider"]], "get_json_response() (context_provider.contextprovider method)": [[3, "context_provider.ContextProvider.get_json_response"]], "is_json() (context_provider.contextprovider method)": [[3, "context_provider.ContextProvider.is_json"]], "make_request() (context_provider.contextprovider method)": [[3, "context_provider.ContextProvider.make_request"]], "set_headers() (context_provider.contextprovider method)": [[3, "context_provider.ContextProvider.set_headers"]], "publisher (class in publisher_broker)": [[6, "publisher_broker.Publisher"]], "main() (publisher_broker.publisher method)": [[6, "publisher_broker.Publisher.main"]], "publisher_broker": [[6, "module-publisher_broker"]], "sensorcp (class in sensor_context_provider)": [[7, "sensor_context_provider.SensorCP"]], "create_entity() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.create_entity"]], "delete_entity() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.delete_entity"]], "get_attribute() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.get_attribute"]], "get_entity() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.get_entity"]], "new_entity() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.new_entity"]], "sensor_context_provider": [[7, "module-sensor_context_provider"]], "update_entity() (sensor_context_provider.sensorcp method)": [[7, "sensor_context_provider.SensorCP.update_entity"]], "subscriber (class in subscriber_broker)": [[9, "subscriber_broker.Subscriber"]], "handling_device() (subscriber_broker.subscriber method)": [[9, "subscriber_broker.Subscriber.handling_device"]], "main() (subscriber_broker.subscriber method)": [[9, "subscriber_broker.Subscriber.main"]], "on_message() (subscriber_broker.subscriber method)": [[9, "subscriber_broker.Subscriber.on_message"]], "subscriber_broker": [[9, "module-subscriber_broker"]], "tracker (class in tracker_sensor)": [[10, "tracker_sensor.Tracker"]], "trackercpf (class in tracker_sensor)": [[10, "tracker_sensor.TrackerCPF"]], "default_values() (tracker_sensor.tracker method)": [[10, "tracker_sensor.Tracker.default_values"]], "default_values() (tracker_sensor.trackercpf method)": [[10, "tracker_sensor.TrackerCPF.default_values"]], "initialize() (tracker_sensor.tracker method)": [[10, "tracker_sensor.Tracker.initialize"]], "mqtt_to_cp() (tracker_sensor.tracker method)": [[10, "tracker_sensor.Tracker.mqtt_to_cp"]], "new_entity() (tracker_sensor.trackercpf method)": [[10, "tracker_sensor.TrackerCPF.new_entity"]], "tracker_sensor": [[10, "module-tracker_sensor"]], "sensor (class in virtual_sensor)": [[11, "virtual_sensor.Sensor"]], "sensorcpf (class in virtual_sensor)": [[11, "virtual_sensor.SensorCPF"]], "default_values() (virtual_sensor.sensorcpf method)": [[11, "virtual_sensor.SensorCPF.default_values"]], "generate_unique_hash() (virtual_sensor.sensor method)": [[11, "virtual_sensor.Sensor.generate_unique_hash"]], "get_date() (virtual_sensor.sensorcpf method)": [[11, "virtual_sensor.SensorCPF.get_date"]], "get_datetime() (virtual_sensor.sensor method)": [[11, "virtual_sensor.Sensor.get_datetime"]], "get_time() (virtual_sensor.sensorcpf method)": [[11, "virtual_sensor.SensorCPF.get_time"]], "info_to_json() (virtual_sensor.sensor method)": [[11, "virtual_sensor.Sensor.info_to_json"]], "mqtt_to_cp() (virtual_sensor.sensor method)": [[11, "virtual_sensor.Sensor.mqtt_to_cp"]], "new_entity() (virtual_sensor.sensorcpf method)": [[11, "virtual_sensor.SensorCPF.new_entity"]], "virtual_sensor": [[11, "module-virtual_sensor"]]}})